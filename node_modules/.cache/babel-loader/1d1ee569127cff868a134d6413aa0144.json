{"ast":null,"code":"import _classCallCheck from \"/Users/arnavkasturia/Desktop/smart-switch/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arnavkasturia/Desktop/smart-switch/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arnavkasturia/Desktop/smart-switch/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arnavkasturia/Desktop/smart-switch/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arnavkasturia/Desktop/smart-switch/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/arnavkasturia/Desktop/smart-switch/src/Dictaphone.js\";\nimport React, { Component } from 'react';\nimport SpeechRecognition from 'react-speech-recognition';\nimport './Dictaphone.css';\nimport Mic from './Mic.png';\nvar options = {\n  autoStart: false\n};\n\nvar Dictaphone =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dictaphone, _Component);\n\n  function Dictaphone() {\n    var _this;\n\n    _classCallCheck(this, Dictaphone);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dictaphone).call(this));\n\n    _this.onButtonClick = function (data) {\n      _this.setState({\n        in: data\n      });\n\n      fetch('http://localhost:3000/', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          in: _this.state.in\n        })\n      }).then(function (response) {\n        return console.log(response.json());\n      }).catch(function (err) {\n        return console.log('error');\n      });\n    };\n\n    _this.state = {\n      in: ''\n    };\n    return _this;\n  }\n\n  _createClass(Dictaphone, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          finalTranscript = _this$props.finalTranscript,\n          stopListening = _this$props.stopListening,\n          startListening = _this$props.startListening,\n          transcript = _this$props.transcript,\n          resetTranscript = _this$props.resetTranscript,\n          browserSupportsSpeechRecognition = _this$props.browserSupportsSpeechRecognition;\n\n      if (!browserSupportsSpeechRecognition) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"measure center pa4 black-80\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ma2 pa2 grow bg-light-green f4\",\n        onClick: resetTranscript,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, transcript)), React.createElement(\"img\", {\n        className: \"ma2\",\n        alt: \"\",\n        src: Mic,\n        onClick: startListening,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"grow pa2 bg-light-green f4\",\n        onClick: this.onButtonClick(finalTranscript),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Stop!\")));\n    }\n  }]);\n\n  return Dictaphone;\n}(Component);\n\nexport default SpeechRecognition(options)(Dictaphone);","map":{"version":3,"sources":["/Users/arnavkasturia/Desktop/smart-switch/src/Dictaphone.js"],"names":["React","Component","SpeechRecognition","Mic","options","autoStart","Dictaphone","onButtonClick","data","setState","in","fetch","method","headers","body","JSON","stringify","state","then","response","console","log","json","catch","err","props","finalTranscript","stopListening","startListening","transcript","resetTranscript","browserSupportsSpeechRecognition"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAO,kBAAP;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,IAAMC,OAAO,GAAE;AACbC,EAAAA,SAAS,EAAC;AADG,CAAf;;IAMMC,U;;;;;AAEJ,wBAAa;AAAA;;AAAA;;AACX;;AADW,UAObC,aAPa,GAOC,UAACC,IAAD,EAAQ;AACpB,YAAKC,QAAL,CAAc;AAACC,QAAAA,EAAE,EAACF;AAAJ,OAAd;;AACAG,MAAAA,KAAK,CAAC,wBAAD,EAA0B;AAC7BC,QAAAA,MAAM,EAAE,MADqB;AAE7BC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFoB;AAG7BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,UAAAA,EAAE,EAAE,MAAKO,KAAL,CAAWP;AAAhB,SAAf;AAHuB,OAA1B,CAAL,CAKCQ,IALD,CAKM,UAAAC,QAAQ;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,EAAZ,CAAJ;AAAA,OALd,EAMCC,KAND,CAMO,UAAAC,GAAG;AAAA,eAAEJ,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAF;AAAA,OANV;AAOD,KAhBY;;AAEX,UAAKJ,KAAL,GAAW;AACTP,MAAAA,EAAE,EAAC;AADM,KAAX;AAFW;AAKZ;;;;6BAcQ;AAAA,wBACgH,KAAKe,KADrH;AAAA,UACCC,eADD,eACCA,eADD;AAAA,UACiBC,aADjB,eACiBA,aADjB;AAAA,UAC+BC,cAD/B,eAC+BA,cAD/B;AAAA,UAC8CC,UAD9C,eAC8CA,UAD9C;AAAA,UAC0DC,eAD1D,eAC0DA,eAD1D;AAAA,UAC2EC,gCAD3E,eAC2EA,gCAD3E;;AAGP,UAAI,CAACA,gCAAL,EAAuC;AACrC,eAAO,IAAP;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,gCAAlB;AAAmD,QAAA,OAAO,EAAED,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,UAAP,CADA,CAFF,EAKE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,GAAG,EAAC,EAAzB;AAA4B,QAAA,GAAG,EAAE1B,GAAjC;AAAsC,QAAA,OAAO,EAAEyB,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,SAAS,EAAC,4BAAlB;AAA+C,QAAA,OAAO,EAAE,KAAKrB,aAAL,CAAmBmB,eAAnB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,CANF,CADF;AAYD;;;;EAxCsBzB,S;;AA2CzB,eAAeC,iBAAiB,CAACE,OAAD,CAAjB,CAA2BE,UAA3B,CAAf","sourcesContent":["import React, {Component } from 'react';\nimport SpeechRecognition from 'react-speech-recognition';\nimport './Dictaphone.css';\nimport Mic from './Mic.png'\n\nconst options ={\n  autoStart:false\n}\n\n\n\nclass Dictaphone extends Component {\n\n  constructor(){\n    super();\n    this.state={\n      in:''\n    }\n  }\n\n  onButtonClick=(data)=>{\n    this.setState({in:data})\n    fetch('http://localhost:3000/',{\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({in: this.state.in})\n    })\n    .then(response => console.log(response.json()))\n    .catch(err=>console.log('error'))\n  }\n\n\n  render() {\n    const { finalTranscript,stopListening,startListening,transcript, resetTranscript, browserSupportsSpeechRecognition } = this.props\n\n    if (!browserSupportsSpeechRecognition) {\n      return null\n    }\n\n    return (\n      <div className='measure center pa4 black-80'>\n        <button className='ma2 pa2 grow bg-light-green f4' onClick={resetTranscript}>Reset</button>\n        <div>\n        <span>{transcript}</span>\n        </div>\n        <img className='ma2' alt='' src={Mic} onClick={startListening} />\n        <div>\n        <button className='grow pa2 bg-light-green f4' onClick={this.onButtonClick(finalTranscript)} >Stop!</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SpeechRecognition(options)(Dictaphone);\n"]},"metadata":{},"sourceType":"module"}