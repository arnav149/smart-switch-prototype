'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Layout = require('./Layout');

var _Layout2 = _interopRequireDefault(_Layout);

var _styles = require('./styles');

var _styles2 = _interopRequireDefault(_styles);

var _gradients = require('../gradients.json');

var _gradients2 = _interopRequireDefault(_gradients);

var _utils = require('./utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Disco = function (_React$Component) {
  _inherits(Disco, _React$Component);

  function Disco(props) {
    _classCallCheck(this, Disco);

    var _this = _possibleConstructorReturn(this, (Disco.__proto__ || Object.getPrototypeOf(Disco)).call(this, props));

    _this.generateGradients = function () {
      var palletes = _this.props.palletes;

      if (palletes) {
        return _gradients2.default.filter(function (gradient) {
          return gradient.colors.some(function (color) {
            return palletes.includes((0, _utils.colorDetector)(color));
          });
        });
      }
      return _gradients2.default;
    };

    _this.nextGradient = function () {
      _this.setState(function (state) {
        if (state.opacity) {
          return {
            back: _this.getGradient(),
            opacity: 0
          };
        }
        return {
          front: _this.getGradient(),
          opacity: 1
        };
      });
    };

    _this.getGradient = function () {
      if (!_this.gradients.length) {
        _this.gradients = _this.generateGradients();
      }

      var gradient = _this.gradients[(0, _utils.getRandomInt)(_this.gradients.length)];
      var duration = (0, _utils.getRandomIntInRange)(_this.props.duration.min, _this.props.duration.max);
      var deg = (0, _utils.getRandomInt)(360);
      _this.gradients = _this.gradients.filter(function (g) {
        return g.name !== gradient.name;
      });

      return {
        gradient: gradient,
        duration: duration,
        deg: deg
      };
    };

    _this.gradients = _this.generateGradients();
    _this.state = {
      front: _this.getGradient(),
      back: _this.getGradient(),
      opacity: 0
    };
    return _this;
  }

  _createClass(Disco, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      setTimeout(this.nextGradient, 0);
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          back = _state.back,
          front = _state.front,
          opacity = _state.opacity;

      return _react2.default.createElement(
        'div',
        { style: _styles2.default.overlay },
        _react2.default.createElement(_Layout2.default, {
          gradient: back.gradient,
          deg: back.deg
        }),
        _react2.default.createElement(_Layout2.default, {
          gradient: front.gradient,
          deg: front.deg,
          duration: front.duration,
          onTransitionEnd: this.nextGradient,
          opacity: opacity
        }),
        this.props.children && _react2.default.createElement(
          'div',
          { style: { position: 'relative' } },
          this.props.children
        )
      );
    }
  }]);

  return Disco;
}(_react2.default.Component);

Disco.propTypes = {
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
  duration: _propTypes2.default.shape({
    min: _propTypes2.default.number,
    max: _propTypes2.default.number
  }),
  palletes: _propTypes2.default.arrayOf(_propTypes2.default.string)
};
Disco.defaultProps = {
  duration: {
    min: 2000,
    max: 5000
  },
  palletes: null
};
exports.default = Disco;