'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.colorDetector = exports.getRandomIntInRange = exports.getRandomInt = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _hexToHsl3 = require('hex-to-hsl');

var _hexToHsl4 = _interopRequireDefault(_hexToHsl3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getRandomInt = exports.getRandomInt = function getRandomInt(int) {
  return Math.floor(Math.random() * int);
};

var getRandomIntInRange = exports.getRandomIntInRange = function getRandomIntInRange(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
};

var colorDetector = exports.colorDetector = function colorDetector(color) {
  var _hexToHsl = (0, _hexToHsl4.default)(color),
      _hexToHsl2 = _slicedToArray(_hexToHsl, 3),
      hue = _hexToHsl2[0],
      sat = _hexToHsl2[1],
      lgt = _hexToHsl2[2];

  if (lgt / 100 < 0.2) {
    return 'black';
  }
  if (lgt / 100 > 0.85) {
    return 'white';
  }
  if (sat / 100 < 0.20) {
    return 'gray';
  }
  if (hue < 30) {
    return 'red';
  }
  if (hue < 60) {
    return 'orange';
  }
  if (hue < 90) {
    return 'yellow';
  }
  if (hue < 150) {
    return 'green';
  }
  if (hue < 210) {
    return 'cyan';
  }
  if (hue < 270 && lgt / 100 < 0.3) {
    return 'darkblue';
  }
  if (hue < 270) {
    return 'blue';
  }
  if (hue < 320 && lgt / 100 < 0.3) {
    return 'darkmagenta';
  }
  if (hue < 330) {
    return 'magenta';
  }
  return 'red';
};